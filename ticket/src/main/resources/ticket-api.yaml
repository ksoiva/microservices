openapi: 3.0.3
info:
  title: Ticket API
  version: 1.0.0
servers:
  - url: http://localhost:8082
tags:
  - name: ticket
    description: Ticket operations
paths:

  /tickets:
    post:
      tags:
        - ticket
      description: Add new ticket
      operationId: addTicket
      requestBody:
        description: Ticket information
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        '200':
          description: New ticket.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
    get:
      tags:
        - ticket
      operationId: getTickets
      responses:
        '200':
          description: A list of tickets.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ticket'

  /tickets/{ticketId}:
    get:
      tags:
        - ticket
      operationId: getTicketById
      parameters:
        - name: ticketId
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Ticket by id.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '404':
          description: Ticket with specified id not found.
    put:
      tags:
        - ticket
      operationId: updateTicketById
      parameters:
        - name: ticketId
          in: path
          required: true
          schema:
            type: number
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/Ticket'
      responses:
        '200':
          description: Ticket was updated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ticket'
        '404':
          description: Ticket with the specified ID was not found.
    delete:
      tags:
        - ticket
      operationId: deleteTicketById
      parameters:
        - name: ticketId
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Ticket was deleted.
        '404':
          description: Ticket not found.

components:
  schemas:
    Passenger:
      type: object
      required:
        - firstName
        - lastName
        - dateOfBirth
        - documentNo
        - docExpireDate
      properties:
        id:
          type: number
          readOnly: true
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          type: string
          format: date
        documentNo:
          type: string
        docExpireDate:
          type: string
          format: date
    TicketFlight:
      required:
        - departureAirport
        - arrivalAirport
        - departureDate
        - arrivalDate
        - price
      type: object
      properties:
        id:
          type: number
          readOnly: true
        departureAirport:
          type: string
        arrivalAirport:
          type: string
        departureDate:
          type: string
          format: date-time
        arrivalDate:
          type: string
          format: date-time
    Ticket:
      required:
        - passenger
        - flight
      type: object
      properties:
        id:
          type: number
          readOnly: true
        seat:
          type: string
        passenger:
          $ref: '#/components/schemas/Passenger'
        flight:
          $ref: '#/components/schemas/TicketFlight'
        baggage:
          type: boolean
        priority:
          type: boolean
        totalPrice:
          type: number